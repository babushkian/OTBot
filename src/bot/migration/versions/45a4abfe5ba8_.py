"""empty message

Revision ID: 45a4abfe5ba8
Revises: 
Create Date: 2025-06-27 16:08:14.528972

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import sqlite

# revision identifiers, used by Alembic.
revision: str = '45a4abfe5ba8'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('usermodel',
    sa.Column('telegram_id', sa.BIGINT(), nullable=False),
    sa.Column('first_name', sa.String(), nullable=True),
    sa.Column('last_name', sa.String(), nullable=True),
    sa.Column('phone_number', sa.String(), nullable=True),
    sa.Column('user_role', sa.Enum('OTPB', 'RESPONSIBLE', 'ADMIN', 'USER', name='userrole'), nullable=False),
    sa.Column('is_approved', sa.Boolean(), server_default=sa.text('0'), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('1'), nullable=False),
    sa.Column('telegram_data', sqlite.JSON(), nullable=True),
    sa.Column('user_description', sa.String(), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('telegram_id')
    )
    op.create_table('areamodel',
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('responsible_user_id', sa.Integer(), nullable=True),
    sa.Column('responsible_text', sa.String(length=250), nullable=True),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['responsible_user_id'], ['usermodel.id'], name='fk_area_responsible_user_id'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('violationmodel',
    sa.Column('detector_id', sa.Integer(), nullable=False),
    sa.Column('area_id', sa.Integer(), nullable=False),
    sa.Column('picture', sa.LargeBinary(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=False),
    sa.Column('status', sa.Enum('REVIEW', 'ACTIVE', 'CORRECTED', 'REJECTED', name='violationstatus'), nullable=False),
    sa.Column('category', sa.String(), nullable=False),
    sa.Column('actions_needed', sa.TEXT(), nullable=False),
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.Column('updated_at', sa.TIMESTAMP(), server_default=sa.text('(CURRENT_TIMESTAMP)'), nullable=False),
    sa.ForeignKeyConstraint(['area_id'], ['areamodel.id'], name='fk_violation_area_id'),
    sa.ForeignKeyConstraint(['detector_id'], ['usermodel.id'], name='fk_detector_user_id'),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('violationmodel')
    op.drop_table('areamodel')
    op.drop_table('usermodel')
    # ### end Alembic commands ###
